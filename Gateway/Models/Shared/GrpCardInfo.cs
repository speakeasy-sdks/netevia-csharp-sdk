
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Gateway.Models.Shared
{
    using Newtonsoft.Json;
    
    /// <summary>
    /// NOTE: This subgroup is only used when card info is from POS, not PDC.&lt;br&gt;<br/>
    /// 
    /// <remarks>
    ///       When sent to a PDC, NeedSwipeCard must be “N”.<br/>
    /// 
    /// </remarks>
    /// </summary>
    public class GrpCardInfo
    {

        /// <summary>
        /// Card number. Maximum length = 22. Must be present when card info is from POS and encrypted.&lt;br&gt;<br/>
        /// 
        /// <remarks>
        /// If this field and ExpDate are set in the request, it does not need to provide Track1, Track2, CardToken. And EntryMode needs to be set to Manual.<br/>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("AccountNum")]
        public string? AccountNum { get; set; }

        /// <summary>
        /// Card verification code on the card.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("CVVNum")]
        public string? CVVNum { get; set; }

        /// <summary>
        /// Indicates whether the card is present.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("CardPresent")]
        public GrpCardInfoCardPresent? CardPresent { get; set; }

        /// <summary>
        /// It can replace AccountNum and ExpDate. Only support in json request.&lt;br&gt;<br/>
        /// 
        /// <remarks>
        /// If this field is set in the request, it does not need to provide AccountNum, ExpDate, Track1, Track2. And EntryMode needs to be set to Manual.<br/>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("CardToken")]
        public string? CardToken { get; set; }

        /// <summary>
        /// Indicates whether the card is Commercial.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("CommercialCard")]
        public GrpCardInfoCommercialCard? CommercialCard { get; set; }

        /// <summary>
        /// Cardholder&apos;s billing address.
        /// </summary>
        [JsonProperty("CustomerAddress")]
        public string? CustomerAddress { get; set; }

        /// <summary>
        /// Cardholder&apos;s billing city.
        /// </summary>
        [JsonProperty("CustomerCity")]
        public string? CustomerCity { get; set; }

        /// <summary>
        /// Cardholder&apos;s name.
        /// </summary>
        [JsonProperty("CustomerName")]
        public string? CustomerName { get; set; }

        /// <summary>
        /// Cardholder&apos;s number.  <br/>
        /// 
        /// <remarks>
        /// Purchase Level2/3 Transaction: This value is used to identify the customer number for purchasing card transactions.<br/>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("CustomerNum")]
        public string? CustomerNum { get; set; }

        /// <summary>
        /// Cardholder&apos;s billing State.
        /// </summary>
        [JsonProperty("CustomerState")]
        public string? CustomerState { get; set; }

        /// <summary>
        /// Cardholder&apos;s billing zip code.
        /// </summary>
        [JsonProperty("CustomerZipCode")]
        public string? CustomerZipCode { get; set; }

        /// <summary>
        /// Must be present when card data is provided by the POS.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("EntryMode")]
        public GrpCardInfoEntryMode? EntryMode { get; set; }

        /// <summary>
        /// Card expiration Date MMYY. Must be present when card info is from POS and encrypted.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("ExpDate")]
        public string? ExpDate { get; set; }

        /// <summary>
        /// Card Type. Must be present when card info is from POS.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("Medium")]
        public GrpCardInfoMedium? Medium { get; set; }

        /// <summary>
        /// indicate the pay protocol.
        /// </summary>
        [JsonProperty("PayAPI")]
        public GrpCardInfoPayAPI? PayAPI { get; set; }

        /// <summary>
        /// It is GPay info and containers the encryption card data.
        /// </summary>
        [JsonProperty("Payload")]
        public string? Payload { get; set; }

        /// <summary>
        /// Indicates whether server should return CardToken.&lt;br&gt;<br/>
        /// 
        /// <remarks>
        /// Only support in json request.<br/>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("RequestCardToken")]
        public GrpCardInfoRequestCardToken? RequestCardToken { get; set; }

        /// <summary>
        /// Full magnetic Track I data read from the card by a card reader.&lt;br&gt;<br/>
        /// 
        /// <remarks>
        ///  If this field is set in the request, it does not need to provide AccountNum, ExpDate, Track2, CardToken. And EntryMode needs to be set to Swipe.<br/>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("Track1")]
        public string? Track1 { get; set; }

        /// <summary>
        /// Full magnetic Track II data read from the card by a card reader.&lt;br&gt;<br/>
        /// 
        /// <remarks>
        /// If this field is set in the request, it does not need to provide AccountNum, ExpDate, Track1, CardToken. And EntryMode needs to be set to Swipe.<br/>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("Track2")]
        public string? Track2 { get; set; }
    }
}