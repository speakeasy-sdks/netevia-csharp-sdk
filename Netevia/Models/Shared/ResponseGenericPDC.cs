
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Netevia.Models.Shared
{
    using Netevia.Models.Shared;
    using Netevia.Utils;
    using Newtonsoft.Json.Linq;
    using Newtonsoft.Json;
    using System.Numerics;
    using System;
    

    public class ResponseGenericPDCType
    {
        private ResponseGenericPDCType(string value) { Value = value; }

        public string Value { get; private set; }
        public static ResponseGenericPDCType GrpTraceSchemas { get { return new ResponseGenericPDCType("grp_trace_Schemas"); } }
        
        public static ResponseGenericPDCType GrpResponseAmountSchemas { get { return new ResponseGenericPDCType("grp_responseAmount_Schemas"); } }
        
        public static ResponseGenericPDCType GrpResponseCardInfoSchemas { get { return new ResponseGenericPDCType("grp_responseCardInfo_Schemas"); } }
        
        public static ResponseGenericPDCType GrpResponseTerminalInfoSchemas { get { return new ResponseGenericPDCType("grp_responseTerminalInfo_Schemas"); } }
        
        public static ResponseGenericPDCType GrpResponseEMVSchemas { get { return new ResponseGenericPDCType("grp_responseEMV_Schemas"); } }
        
        public static ResponseGenericPDCType GrpResponseRefSchemas { get { return new ResponseGenericPDCType("grp_responseRef_Schemas"); } }
        
        public static ResponseGenericPDCType GrpResponseMerchantSchemas { get { return new ResponseGenericPDCType("grp_responseMerchant_Schemas"); } }
        
        public static ResponseGenericPDCType Null { get { return new ResponseGenericPDCType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(ResponseGenericPDCType v) { return v.Value; }
        public static ResponseGenericPDCType FromString(string v) {
            switch(v) {
                case "grp_trace_Schemas": return GrpTraceSchemas;
                case "grp_responseAmount_Schemas": return GrpResponseAmountSchemas;
                case "grp_responseCardInfo_Schemas": return GrpResponseCardInfoSchemas;
                case "grp_responseTerminalInfo_Schemas": return GrpResponseTerminalInfoSchemas;
                case "grp_responseEMV_Schemas": return GrpResponseEMVSchemas;
                case "grp_responseRef_Schemas": return GrpResponseRefSchemas;
                case "grp_responseMerchant_Schemas": return GrpResponseMerchantSchemas;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for ResponseGenericPDCType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((ResponseGenericPDCType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }
    
/// <summary>
/// Result Group.<br/>
/// 
/// <remarks>
/// 
/// </remarks>
/// </summary>
    [JsonConverter(typeof(ResponseGenericPDC.ResponseGenericPDCConverter))]
    public class ResponseGenericPDC {
        public ResponseGenericPDC(ResponseGenericPDCType type) {
            Type = type;
        }
        public GrpTraceSchemas? GrpTraceSchemas { get; set; } 
        public GrpResponseAmountSchemas? GrpResponseAmountSchemas { get; set; } 
        public GrpResponseCardInfoSchemas? GrpResponseCardInfoSchemas { get; set; } 
        public GrpResponseTerminalInfoSchemas? GrpResponseTerminalInfoSchemas { get; set; } 
        public GrpResponseEMVSchemas? GrpResponseEMVSchemas { get; set; } 
        public GrpResponseRefSchemas? GrpResponseRefSchemas { get; set; } 
        public GrpResponseMerchantSchemas? GrpResponseMerchantSchemas { get; set; } 

        public ResponseGenericPDCType Type { get; set; }


        public static ResponseGenericPDC CreateGrpTraceSchemas(GrpTraceSchemas grpTraceSchemas) {
            ResponseGenericPDCType typ = ResponseGenericPDCType.GrpTraceSchemas;

            ResponseGenericPDC res = new ResponseGenericPDC(typ);
            res.GrpTraceSchemas = grpTraceSchemas;
            return res;
        }

        public static ResponseGenericPDC CreateGrpResponseAmountSchemas(GrpResponseAmountSchemas grpResponseAmountSchemas) {
            ResponseGenericPDCType typ = ResponseGenericPDCType.GrpResponseAmountSchemas;

            ResponseGenericPDC res = new ResponseGenericPDC(typ);
            res.GrpResponseAmountSchemas = grpResponseAmountSchemas;
            return res;
        }

        public static ResponseGenericPDC CreateGrpResponseCardInfoSchemas(GrpResponseCardInfoSchemas grpResponseCardInfoSchemas) {
            ResponseGenericPDCType typ = ResponseGenericPDCType.GrpResponseCardInfoSchemas;

            ResponseGenericPDC res = new ResponseGenericPDC(typ);
            res.GrpResponseCardInfoSchemas = grpResponseCardInfoSchemas;
            return res;
        }

        public static ResponseGenericPDC CreateGrpResponseTerminalInfoSchemas(GrpResponseTerminalInfoSchemas grpResponseTerminalInfoSchemas) {
            ResponseGenericPDCType typ = ResponseGenericPDCType.GrpResponseTerminalInfoSchemas;

            ResponseGenericPDC res = new ResponseGenericPDC(typ);
            res.GrpResponseTerminalInfoSchemas = grpResponseTerminalInfoSchemas;
            return res;
        }

        public static ResponseGenericPDC CreateGrpResponseEMVSchemas(GrpResponseEMVSchemas grpResponseEMVSchemas) {
            ResponseGenericPDCType typ = ResponseGenericPDCType.GrpResponseEMVSchemas;

            ResponseGenericPDC res = new ResponseGenericPDC(typ);
            res.GrpResponseEMVSchemas = grpResponseEMVSchemas;
            return res;
        }

        public static ResponseGenericPDC CreateGrpResponseRefSchemas(GrpResponseRefSchemas grpResponseRefSchemas) {
            ResponseGenericPDCType typ = ResponseGenericPDCType.GrpResponseRefSchemas;

            ResponseGenericPDC res = new ResponseGenericPDC(typ);
            res.GrpResponseRefSchemas = grpResponseRefSchemas;
            return res;
        }

        public static ResponseGenericPDC CreateGrpResponseMerchantSchemas(GrpResponseMerchantSchemas grpResponseMerchantSchemas) {
            ResponseGenericPDCType typ = ResponseGenericPDCType.GrpResponseMerchantSchemas;

            ResponseGenericPDC res = new ResponseGenericPDC(typ);
            res.GrpResponseMerchantSchemas = grpResponseMerchantSchemas;
            return res;
        }

        public static ResponseGenericPDC CreateNull() {
            ResponseGenericPDCType typ = ResponseGenericPDCType.Null;
            return new ResponseGenericPDC(typ);
        }

        public class ResponseGenericPDCConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(ResponseGenericPDC);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            { 
                var json = JRaw.Create(reader).ToString();

                if (json == "null") {
                    return null;
                }
                try
                {
                    GrpTraceSchemas? grpTraceSchemas = JsonConvert.DeserializeObject<GrpTraceSchemas>(json, new JsonSerializerSettings(){ NullValueHandling = NullValueHandling.Ignore, MissingMemberHandling = MissingMemberHandling.Error, Converters = Utilities.GetJsonConverters(typeof(GrpTraceSchemas))});
                    return new ResponseGenericPDC(ResponseGenericPDCType.GrpTraceSchemas) {
                        GrpTraceSchemas = grpTraceSchemas
                    };
                }
                catch (Exception ex)
                {
                    if (!(ex is Newtonsoft.Json.JsonReaderException || ex is Newtonsoft.Json.JsonSerializationException)) {
                        throw ex;
                    }
                }
                try
                {
                    GrpResponseAmountSchemas? grpResponseAmountSchemas = JsonConvert.DeserializeObject<GrpResponseAmountSchemas>(json, new JsonSerializerSettings(){ NullValueHandling = NullValueHandling.Ignore, MissingMemberHandling = MissingMemberHandling.Error, Converters = Utilities.GetJsonConverters(typeof(GrpResponseAmountSchemas))});
                    return new ResponseGenericPDC(ResponseGenericPDCType.GrpResponseAmountSchemas) {
                        GrpResponseAmountSchemas = grpResponseAmountSchemas
                    };
                }
                catch (Exception ex)
                {
                    if (!(ex is Newtonsoft.Json.JsonReaderException || ex is Newtonsoft.Json.JsonSerializationException)) {
                        throw ex;
                    }
                }
                try
                {
                    GrpResponseTerminalInfoSchemas? grpResponseTerminalInfoSchemas = JsonConvert.DeserializeObject<GrpResponseTerminalInfoSchemas>(json, new JsonSerializerSettings(){ NullValueHandling = NullValueHandling.Ignore, MissingMemberHandling = MissingMemberHandling.Error, Converters = Utilities.GetJsonConverters(typeof(GrpResponseTerminalInfoSchemas))});
                    return new ResponseGenericPDC(ResponseGenericPDCType.GrpResponseTerminalInfoSchemas) {
                        GrpResponseTerminalInfoSchemas = grpResponseTerminalInfoSchemas
                    };
                }
                catch (Exception ex)
                {
                    if (!(ex is Newtonsoft.Json.JsonReaderException || ex is Newtonsoft.Json.JsonSerializationException)) {
                        throw ex;
                    }
                }
                try
                {
                    GrpResponseRefSchemas? grpResponseRefSchemas = JsonConvert.DeserializeObject<GrpResponseRefSchemas>(json, new JsonSerializerSettings(){ NullValueHandling = NullValueHandling.Ignore, MissingMemberHandling = MissingMemberHandling.Error, Converters = Utilities.GetJsonConverters(typeof(GrpResponseRefSchemas))});
                    return new ResponseGenericPDC(ResponseGenericPDCType.GrpResponseRefSchemas) {
                        GrpResponseRefSchemas = grpResponseRefSchemas
                    };
                }
                catch (Exception ex)
                {
                    if (!(ex is Newtonsoft.Json.JsonReaderException || ex is Newtonsoft.Json.JsonSerializationException)) {
                        throw ex;
                    }
                }
                try
                {
                    GrpResponseMerchantSchemas? grpResponseMerchantSchemas = JsonConvert.DeserializeObject<GrpResponseMerchantSchemas>(json, new JsonSerializerSettings(){ NullValueHandling = NullValueHandling.Ignore, MissingMemberHandling = MissingMemberHandling.Error, Converters = Utilities.GetJsonConverters(typeof(GrpResponseMerchantSchemas))});
                    return new ResponseGenericPDC(ResponseGenericPDCType.GrpResponseMerchantSchemas) {
                        GrpResponseMerchantSchemas = grpResponseMerchantSchemas
                    };
                }
                catch (Exception ex)
                {
                    if (!(ex is Newtonsoft.Json.JsonReaderException || ex is Newtonsoft.Json.JsonSerializationException)) {
                        throw ex;
                    }
                }
                try
                {
                    GrpResponseEMVSchemas? grpResponseEMVSchemas = JsonConvert.DeserializeObject<GrpResponseEMVSchemas>(json, new JsonSerializerSettings(){ NullValueHandling = NullValueHandling.Ignore, MissingMemberHandling = MissingMemberHandling.Error, Converters = Utilities.GetJsonConverters(typeof(GrpResponseEMVSchemas))});
                    return new ResponseGenericPDC(ResponseGenericPDCType.GrpResponseEMVSchemas) {
                        GrpResponseEMVSchemas = grpResponseEMVSchemas
                    };
                }
                catch (Exception ex)
                {
                    if (!(ex is Newtonsoft.Json.JsonReaderException || ex is Newtonsoft.Json.JsonSerializationException)) {
                        throw ex;
                    }
                }
                try
                {
                    GrpResponseCardInfoSchemas? grpResponseCardInfoSchemas = JsonConvert.DeserializeObject<GrpResponseCardInfoSchemas>(json, new JsonSerializerSettings(){ NullValueHandling = NullValueHandling.Ignore, MissingMemberHandling = MissingMemberHandling.Error, Converters = Utilities.GetJsonConverters(typeof(GrpResponseCardInfoSchemas))});
                    return new ResponseGenericPDC(ResponseGenericPDCType.GrpResponseCardInfoSchemas) {
                        GrpResponseCardInfoSchemas = grpResponseCardInfoSchemas
                    };
                }
                catch (Exception ex)
                {
                    if (!(ex is Newtonsoft.Json.JsonReaderException || ex is Newtonsoft.Json.JsonSerializationException)) {
                        throw ex;
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }
                ResponseGenericPDC res = (ResponseGenericPDC)value;
                if (ResponseGenericPDCType.FromString(res.Type).Equals(ResponseGenericPDCType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }
                if (res.GrpTraceSchemas != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.GrpTraceSchemas));
                    return;
                }
                if (res.GrpResponseAmountSchemas != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.GrpResponseAmountSchemas));
                    return;
                }
                if (res.GrpResponseCardInfoSchemas != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.GrpResponseCardInfoSchemas));
                    return;
                }
                if (res.GrpResponseTerminalInfoSchemas != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.GrpResponseTerminalInfoSchemas));
                    return;
                }
                if (res.GrpResponseEMVSchemas != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.GrpResponseEMVSchemas));
                    return;
                }
                if (res.GrpResponseRefSchemas != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.GrpResponseRefSchemas));
                    return;
                }
                if (res.GrpResponseMerchantSchemas != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.GrpResponseMerchantSchemas));
                    return;
                }

            }
        }

    }

}