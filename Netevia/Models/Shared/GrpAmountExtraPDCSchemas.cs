
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Netevia.Models.Shared
{
    using Netevia.Models.Shared;
    using Newtonsoft.Json;
    
    /// <summary>
    /// Note: This subgroup contains fields specific to the PDC transactions.<br/>
    /// 
    /// <remarks>
    /// 
    /// </remarks>
    /// </summary>
    public class GrpAmountExtraPDCSchemas
    {

        /// <summary>
        /// Indicates whether partial authorization is allowed.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("AllowsPartialAuth")]
        public SchemasGrpAmountExtraPDCAllowsPartialAuth? AllowsPartialAuth { get; set; }

        /// <summary>
        /// Indicates whether to check for duplicate transactions.&lt;br&gt;<br/>
        /// 
        /// <remarks>
        /// Duplicate check interval: 1 minute.&lt;br&gt;<br/>
        /// Note: you need to supply this field in all the request to enable this feature.<br/>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("CheckDuplicate")]
        public SchemasGrpAmountExtraPDCCheckDuplicate? CheckDuplicate { get; set; }

        /// <summary>
        /// Indicates whether do force void transaction.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("CreditOnFailure")]
        public SchemasGrpAmountExtraPDCCreditOnFailure? CreditOnFailure { get; set; }

        /// <summary>
        /// Merchant identifier Assigned by&lt;br&gt;<br/>
        /// 
        /// <remarks>
        /// Netevia Payment Systems Administrator during registration<br/>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("GMID")]
        public string Gmid { get; set; } = default!;

        /// <summary>
        /// Merchant password&lt;br&gt;<br/>
        /// 
        /// <remarks>
        /// Only verified for Refund transactions.&lt;br&gt;<br/>
        /// It can be any value for other transactions.<br/>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("GMPW")]
        public string Gmpw { get; set; } = default!;

        /// <summary>
        /// Merchant&apos;s terminal identifier&lt;br&gt;<br/>
        /// 
        /// <remarks>
        /// Assigned by Netevia Payment Systems Administrator during registration.&lt;br&gt;<br/>
        /// This field is Optional when doing Register.<br/>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("GTID")]
        public string Gtid { get; set; } = default!;

        /// <summary>
        /// Ignore AVS result from processor, default value is Y, if need to check AVS result please send it in request with N. the feature only works in TSYS and Elavon. Elavon if host return the code (A,B,C,E,N,R,W,Z) and doesnt&apos; ignore avs result code then Netevia will reject the verify request. TSYS if host return N and doesn&apos;t ignore avs result then Netevia will reject the Verify, Auth, Sale request.
        /// </summary>
        [JsonProperty("IgnoreAVSResult")]
        public SchemasGrpAmountExtraPDCIgnoreAVSResult? IgnoreAVSResult { get; set; }

        /// <summary>
        /// Ignore CVV result from processor, default value is Y, if need to check CVV result please send it in request with N. the feature only works in TSYS and Elavon. Elavon, if doesn&apos;t Ignore CVV and host return N then Netevia will reject the Verify request. TSYS, if doesn&apos;t ignore cvv and host return N then Netevia will reject the Verify/Auth/Sale request.
        /// </summary>
        [JsonProperty("IgnoreCVVResult")]
        public SchemasGrpAmountExtraPDCIgnoreCVVResult? IgnoreCVVResult { get; set; }

        /// <summary>
        /// Ignore Void result from processor. if processor return fail, then we force it to success. Default value is Y,
        /// </summary>
        [JsonProperty("IgnoreVoidResult")]
        public SchemasGrpAmountExtraPDCIgnoreVoidResult? IgnoreVoidResult { get; set; }

        /// <summary>
        /// Indicates whether is an offline transaction.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("IsOffline")]
        public SchemasGrpAmountExtraPDCIsOffline? IsOffline { get; set; }

        /// <summary>
        /// This field is used when sending a request to a PDC. Indicates whether the card data should be retrieved using the pinpad(&quot;Y&quot;) or it is not needed(Void/Refund) or already provided in the request(&quot;N&quot;). This works for all entry modes Manual/Swipe/EMV/Contactless.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("NeedSwipeCard")]
        public SchemasGrpAmountExtraPDCNeedSwipeCard? NeedSwipeCard { get; set; }

        /// <summary>
        /// The feature to support cardholders choosing a predefined percentage/value or manual entering tip amount on the device. If the flag set to &apos;Y&apos; then this feature is enabled.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("RequestTipAmount")]
        public RequestTipAmount? RequestTipAmount { get; set; }

        /// <summary>
        /// Service charge amount will be used as the reference amount when calculating the percentage tip amount. In case it is missing, the MainAmt will be used as the ServiceAmt. This is usefull for use cases when the charged amount is less than the actual service amount(for cases when discounts are applied).&lt;br&gt;<br/>
        /// 
        /// <remarks>
        /// Total digits = 12<br/>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("ServiceAmt")]
        public long? ServiceAmt { get; set; }

        /// <summary>
        /// This flag will specify the TipAmountRate format: a percentage, the calculated percentage amount or a fixed amount. &lt;br&gt;<br/>
        /// 
        /// <remarks>
        /// Valid values:&lt;br&gt;<br/>
        /// &lt;ul&gt;<br/>
        ///   &lt;li&gt;&apos;A&apos;: TipAmountRate contains fixed tip amounts&lt;/li&gt;<br/>
        ///   &lt;li&gt;&apos;P&apos;: TipAmountRate contains percentages and the tip is the percentage of the service amount or the main amount. The pinpad will display the percentages to choose from.&lt;/li&gt;<br/>
        ///   &lt;li&gt;&apos;D&apos;: TipAmountRate contains percentages and the tip is the percentage of the service amount or the main amount. The pinpad will display the calculated amount percentages to choose from.&lt;/li&gt;<br/>
        /// &lt;/ul&gt;<br/>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("TipAmountPromptFormat")]
        public TipAmountPromptFormat? TipAmountPromptFormat { get; set; }

        /// <summary>
        /// The &quot;TipAmountRate&quot; is used to set 3 predefined tip values. The specific meaning of the data is determined by the field TipAmountPromptFormat.&lt;br&gt;<br/>
        /// 
        /// <remarks>
        /// If TipAmountPromptFormat is &apos;A&apos; then the tip will be $0.10 $0.20 $0.30 on the device screen.&lt;br&gt;<br/>
        /// If TipAmountPromptFormat is &apos;P&apos; then the tip will be calculated based on the service amount(1000, $10.00), device will display options like 10% 20% 30% and the real tip amount is $1.00 $2.00 $3.00.&lt;br&gt;<br/>
        ///  If TipAmountPromptFormat is &apos;D&apos; then the calculated percentage tip amount will show on the device.<br/>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("TipAmountRate")]
        public string? TipAmountRate { get; set; }

        /// <summary>
        /// Transaction Type.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("TransType")]
        public SchemasGrpAmountExtraPDCTransType TransType { get; set; } = default!;

        /// <summary>
        /// Indicates whether verify card when doing CreateCardToken.<br/>
        /// 
        /// <remarks>
        /// 
        /// </remarks>
        /// </summary>
        [JsonProperty("VerifyCard")]
        public SchemasGrpAmountExtraPDCVerifyCard? VerifyCard { get; set; }
    }
}